@tailwind base;
@tailwind components;
@tailwind utilities;
@layer utilities {
  @keyframes heroFadeIn {
    0% {
      transform: scale(1.5);
      filter: blur(10px);
      opacity: 0.8;
    }
    100% {
      transform: scale(1);
      filter: blur(0);
      opacity: 1;
    }
  }

  .animate-heroFadeIn {
    animation: heroFadeIn 2.5s ease-out 1s forwards;
  }
}
@layer base {
  .prose img {
    margin-top: 2rem; /* 上間距 */
    margin-bottom: 2rem; /* 下間距 */
  }
}

/* 定義蘋方字體 */
@font-face {
  font-family: 'PingFang TC';
  src: local('PingFang TC Regular'),
    local('PingFang TC'),
    local('PingFang SC Regular'),
    local('PingFang SC');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'PingFang TC';
  src: local('PingFang TC Medium'),
    local('PingFang SC Medium');
  font-weight: 200;
  font-style: normal;
}

@font-face {
  font-family: 'PingFang TC';
  src: local('PingFang TC Semibold'),
    local('PingFang SC Semibold');
  font-weight: 600;
  font-style: normal;
}

@font-face {
  font-family: 'PingFang TC';
  src: local('PingFang TC Bold'),
    local('PingFang SC Bold');
  font-weight: bold;
  font-style: normal;
}

/* 自定義文字 */
body {
  @apply bg-[var(--main-beige-color)]
}

/* 應用 YakuHan JP 和蘋方字體 */
body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
span,
div {
  font-feature-settings: "palt";
  -webkit-font-feature-settings: "palt";
  -moz-font-feature-settings: "palt";
  -ms-font-feature-settings: "palt";
  -o-font-feature-settings: "palt";
  font-family: 'PingFang TC', 'PingFang SC', -apple-system, BlinkMacSystemFont, sans-serif;
}

h1 {
  @apply text-[3rem] font-semibold text-gray-800 mt-4 mb-6;
}

h2 {
  @apply text-[2.2rem] font-semibold mt-4 mb-6;
  color: var(--font-deep-black);
}

p {
  @apply text-[1rem];
  color: var(--dark-light-gray);
}

:root {
  /* 標題和內文顏色 */
  --font-deep-black: #1b1b1b;
  --font-deep-gray: #1f1f1f;
  --dark-light-gray: #3a3a3a;
  /* 主題色和輔助色 */
  --main-green-color: #333;
  --main-beige-color: #f5f1ec;

  /* 第三方插件顏色 */
  --white-gradient: repeating-linear-gradient(100deg,
      var(--white) 0%,
      var(--white) 7%,
      var(--transparent) 10%,
      var(--transparent) 12%,
      var(--white) 16%);
  --dark-gradient: repeating-linear-gradient(100deg,
      var(--black) 0%,
      var(--black) 7%,
      var(--transparent) 10%,
      var(--transparent) 12%,
      var(--black) 16%);
  --aurora: repeating-linear-gradient(100deg,
      var(--blue-500) 10%,
      var(--indigo-300) 15%,
      var(--blue-300) 10%,
      var(--violet-200) 15%,
      var(--blue-400) 10%);
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@keyframes scroll {
  0% {
    transform: translateX(0);
  }

  100% {
    transform: translateX(-100%);
  }
}

.animate-scroll {
  animation: scroll var(--animation-duration) linear infinite;
}

/* 支援 mask-image */
@layer utilities {
  .mask-radial {
    mask-image: radial-gradient(ellipse at 20% 0%, black 10%, transparent 30%);
  }
}

body {
  transition-property: opacity, transform, filter, background;
  transition-timing-function: ease-in-out;
  transition-duration: 500ms;
  color: rgb(var(--foreground-rgb));
  background: rgb(var(--background-end-rgb));
  font-feature-settings: "palt";
  -webkit-font-feature-settings: "palt";
  -moz-font-feature-settings: "palt";
  -ms-font-feature-settings: "palt";
  -o-font-feature-settings: "palt";
  font-feature-settings: "palt";
}

.page-transition {
  opacity: 0;
  background: black;
  transform: translateY(40px);
  filter: blur(12px);
}

.pre-loader {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: var(--bg);
  clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
  z-index: 100000;
}

.progress-bar {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 7px;
  background-color: var(--text);
  transform: scaleX(0);
  transform-origin: left;
}

.home-page {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
}

.hero-img {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
}

.hero-title {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 60%;
  text-align: center;
}

.hero-title .line {
  clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
}

.hero-title h1 {
  position: relative;
  transform: translateY(70px);
  will-change: transform;
  color: white;
}

@media (max-width: 900px) {
  .hero-title {
    width: 90%;
  }
}

@layer base {
  .wrapper {
    --col-width: 130px;
    @apply grid w-full gap-2;
    grid-template-columns:
      [full-start] minmax(0, 100%) [wide-start]
      repeat(2, minmax(0, var(--col-width))) [narrow-start]
      repeat(8, minmax(0, var(--col-width))) [narrow-end]
      repeat(2, minmax(0, var(--col-width))) [wide-end]
      minmax(0, 100%) [full-end];
  }

  .wrapper > * {
    grid-column: wide;
  }

  .wrapper > .full-bleed {
    grid-column: full;
  }

  @media (min-width: 768px) {
    .wrapper > * {
      grid-column: narrow;
    }
  }

  @keyframes fill-text {
    to {
      --progress: 100%;
    }
  }

  @keyframes parallax-movement {
    to {
      transform: translateY(var(--movement));
    }
  }

  @property --progress {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 0%;
  }
}

@layer components {
  .reveal-text {
    --faded-color: #ccc;
    --higlighted-color: #111;
    /* Compared to the video, I updated this article to reflect
       a solution that's so much easier. Creating a single gradient
       with two colors, and then animating the starting/end point of
       the two colors with a CSS variable --progress. CSS @property
       makes this so much easier for us now.
    */
    --progress: 0%;
    background-image: linear-gradient(to right,
        var(--higlighted-color),
        var(--higlighted-color) var(--progress),
        var(--faded-color) var(--progress),
        var(--faded-color));
    background-clip: text;
    background-repeat: no-repeat;
    color: transparent;
    display: inline;
    animation: fill-text linear both;
    animation-timeline: --reveal-wrapper;
    animation-range: entry 200% cover 80%;
  }

  .parallax-image {
    transform: translateY(0px);
    animation: parallax-movement linear both;
    animation-timeline: --parallax-wrapper;
    animation-range: entry 25% cover 80%;
  }
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 3.9%;
    --primary: 0 0% 9%;
    --primary-foreground: 0 0% 98%;
    --secondary: 0 0% 96.1%;
    --secondary-foreground: 0 0% 9%;
    --muted: 0 0% 96.1%;
    --muted-foreground: 0 0% 45.1%;
    --accent: 0 0% 96.1%;
    --accent-foreground: 0 0% 9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 89.8%;
    --input: 0 0% 89.8%;
    --ring: 0 0% 3.9%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 0 0% 3.9%;
    --foreground: 0 0% 98%;
    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 0 0% 9%;
    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;
    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 0% 83.1%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}

/* 自訂 AOS 動畫：fade-up-blur */
[data-aos="fade-up-blur"] {
  opacity: 0.8;
  transform: translateY(20px);
  filter: blur(50px);
  /* 初始模糊程度 */
  transition:
    opacity 1.2s ease-out,
    transform 1.2s ease-out,
    filter 3s cubic-bezier(0.19, 1, 0.22, 1);
  /* 讓模糊過渡更慢更順暢 */
}

[data-aos="fade-up-blur"].aos-animate {
  opacity: 1;
  transform: translateY(0);
  filter: blur(0px);
  /* 清晰 */
}

.hero-video {
  position: relative;
  /* 確保遮罩的 absolute 參考這個區塊 */
  width: 100vw;
  height: 100vh;
  /* 讓影片佔滿手機螢幕 */
  overflow: hidden;
}

.video-bg {
  width: 100vw;
  height: 100vh;
  object-fit: cover;
  /* 讓影片填滿畫面 */
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  /* 影片在最底層 */
}

/* 黑色遮罩 */
.video-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.5);
  /* 黑色半透明遮罩 */
  z-index: 1;
  /* 讓遮罩覆蓋影片 */
}

.col {
  flex: 1;
}

.col:nth-child(2) {
  padding: 2em;
  display: flex;
  justify-content: center;
  align-items: center;
}

.col p {
  font-weight: 500;
  font-size: 2rem;
  color: var(--copy);
}

.col p .line {
  clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
}

.col p .line span {
  position: relative;
  will-change: transform;
}

::view-transition-old(root),
::view-transition-new(root) {
  animation: none !important;
}

::view-transition-group(root) {
  z-index: auto !important;
}

::view-transition-image-pair(root) {
  isolation: isolate;
  will-change: transform, opacity, clip-path;
  z-index: 1;
}

::view-transition-new(root) {
  z-index: 10000;
  animation: none !important;
}

::view-transition-old(root) {
  z-index: 1;
  animation: none !important;
}

/* public/logo-loader.css */
.logo-stroke {
  stroke-dasharray: 600;
  stroke-dashoffset: 600;
  animation: draw 2.5s ease forwards;
}

@keyframes draw {
  to {
    stroke-dashoffset: 0;
  }
}

/* 
.container {
  position: relative;
  width: 100vw;
  height: 100svh;
  overflow: hidden;
} */

.hero-img {
  position: absolute;
  top: 0;
  width: 100vw;
  height: 100svh;
  overflow: hidden;
  z-index: -1;
}

.nav {
  position: absolute;
  top: 0;
  width: 100vw;
  padding: 1.25em 1.5em;
  display: flex;
  align-items: center;
  gap: 1.5em;
  will-change: transform;
}

.nav>div {
  flex: 1;
}

.logo a {
  text-transform: capitalize;
  font-size: 14px;
  font-weight: bolder;
}

.nav-links {
  display: flex;
  gap: 1.5em;
  justify-content: center;
}

.btn {
  display: flex;
  justify-content: flex-end;
}

.btn a {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 16px;
  width: 60px;
  height: 40px;
  color: #000;
  background-color: #fff;
  border-radius: 40px;
}

.header {
  width: 100%;
  height: 100%;
  padding-top: 25svh;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.5em;
}

.cta {
  position: absolute;
  left: 50%;
  bottom: 3em;
  transform: translateX(-50%);
  width: 50%;
  height: 60px;
  padding: 0.5rem;
  display: flex;
  justify-content: flex-end;
  background-color: #fff;
  border-radius: 4rem;
  will-change: transform;
}

.cta-label {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.cta-label p {
  color: #000;
}

.cta-icon {
  position: relative;
  height: 100%;
  aspect-ratio: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  color: #fff;
  background-color: #303030;
  border-radius: 60px;
  will-change: transform;
}

.loader {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100svh;
  overflow: hidden;
  z-index: 9999999999;
}

.overlay {
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  display: flex;
}

.preloader-block {
  width: 100%;
  height: 100%;

  background: #F5F5F5;
}

.intro-logo {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
  gap: 0.25rem;
}

#word-1 {
  position: relative;
  left: -0.5rem;
  padding-right: 0.25rem;
}

.word h1 {
  font-size: 2.5rem;
}

.divider {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  transform-origin: center top;
  width: 1px;
  height: 100%;
  background-color: #fff;
}

.spinner-container {
  position: absolute;
  bottom: 10%;
  left: 50%;
  transform: translateX(-50%);
}

.spinner {
  width: 50px;
  height: 50px;
  border: 1.4px solid #fff;
  border-top-color: rgba(255, 255, 255, 0.125);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

.counter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 2;
}

.count {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  display: flex;
}

.digit {
  flex: 1;
  padding-top: 1rem;
}

.count .digit h1 {
  font-family: "PP Editorial Old", "PP Neue Montreal";
  font-size: 15rem;
  font-weight: 400;
}

.nav {
  transform: translateY(-120%);
}

.cta {
  transform: translateX(-50%) scale(0);
}

.cta-icon {
  transform: scale(0);
}

.line,
.cta-label,
.word,
.count .digit {
  clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
}

.line h1,
.line p,
.cta-label p,
.count .digit h1 {
  position: relative;
  transform: translateY(120%);
  will-change: transform;
}

#word-1 h1 {
  transform: translateY(-130%);
}

#word-2 h1 {
  transform: translateY(120%);
}

.preloader-block {
  clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
}

.divider {
  transform: scaleY(0%);
  will-change: transform;
}

.hero-img {
  transform: scale(1.5);
  will-change: transform;
}

@media (max-width: 900px) {
  h1 {
    font-size: 2.5rem;
  }

  .nav-links {
    display: none;
  }

  .cta {
    width: 90%;
  }
}

.embla {
  max-width: 48rem;
  margin: auto;
  --slide-height: 19rem;
  --slide-spacing: 1rem;
  --slide-size: 65%;
}

.embla__viewport {
  overflow: hidden;
}

.embla__container {
  display: flex;
  touch-action: pan-y pinch-zoom;
  margin-left: calc(var(--slide-spacing) * -1);
}

.embla__slide {
  transform: translate3d(0, 0, 0);
  flex: 0 0 var(--slide-size);
  min-width: 0;
  padding-left: var(--slide-spacing);
}

.embla__slide__number {
  box-shadow: inset 0 0 0 0.2rem var(--detail-medium-contrast);
  border-radius: 1.8rem;
  font-size: 4rem;
  font-weight: 600;
  display: flex;
  align-items: center;
  justify-content: center;
  height: var(--slide-height);
  user-select: none;
}

.embla__controls {
  display: grid;
  grid-template-columns: auto 1fr;
  justify-content: space-between;
  gap: 1.2rem;
  margin-top: 1.8rem;
}

.embla__buttons {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 0.6rem;
  align-items: center;
}

.embla__button {
  -webkit-tap-highlight-color: rgba(var(--text-high-contrast-rgb-value), 0.5);
  -webkit-appearance: none;
  appearance: none;
  background-color: transparent;
  touch-action: manipulation;
  display: inline-flex;
  text-decoration: none;
  cursor: pointer;
  border: 0;
  padding: 0;
  margin: 0;
  box-shadow: inset 0 0 0 0.2rem var(--detail-medium-contrast);
  width: 3.6rem;
  height: 3.6rem;
  z-index: 1;
  border-radius: 50%;
  color: var(--text-body);
  display: flex;
  align-items: center;
  justify-content: center;
}

.embla__button:disabled {
  color: var(--detail-high-contrast);
}

.embla__button__svg {
  width: 35%;
  height: 35%;
}

.embla__progress {
  border-radius: 1.8rem;
  box-shadow: inset 0 0 0 0.2rem var(--detail-medium-contrast);
  background-color: var(--background-site);
  position: relative;
  height: 0.6rem;
  justify-self: flex-end;
  align-self: center;
  width: 13rem;
  max-width: 90%;
  overflow: hidden;
}

.embla__progress__bar {
  background-color: var(--text-body);
  position: absolute;
  width: 100%;
  top: 0;
  bottom: 0;
  left: -100%;
}

.swiper-style-wrapper {
  --swiper-navigation-color: #fff;
  --swiper-pagination-color: #fff;
  --swiper-transition-timing-function: cubic-bezier(0.645, 0.045, 0.355, 1);
}